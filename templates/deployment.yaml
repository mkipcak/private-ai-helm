apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "private-ai.fullname" . }}
  labels:
    {{- include "private-ai.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "private-ai.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "private-ai.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets.name }}
      containers:
        - name: {{ .Chart.Name }}          
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- if .Values.gpuEnabled }}
          resources:
            limits:
              nvidia.com/gpu: {{ .Values.limits.gpu }}
              memory: {{ .Values.limits.memory }}
              cpu: {{ .Values.limits.cpu }}
            requests:
              memory: {{ .Values.requests.memory }}
              cpu: {{ .Values.requests.cpu }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          {{- with .Values.envVars }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ .Values.secrets.name }}
                optional: true
          volumeMounts:
            - name: {{ .Values.license.volumeMount }}
              mountPath: /app/license
          {{- if .Values.gpuEnabled }}
            - name: dshm-volume
              mountPath: /dev/shm
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.targetPort }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.targetPort }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.timeoutSeconds }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.targetPort }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
      volumes:
        - name: {{ .Values.license.volumeMount }}
          secret:
            secretName: {{ .Values.license.name }}
      {{- if .Values.gpuEnabled }}
        - name: dshm-volume
          emptyDir:
            medium: Memory
      {{- end }}
      {{- if .Values.affinity.enabled }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.affinity.key }}
                operator: {{ .Values.affinity.operator }}
                values:
                - {{ .Values.affinity.values }} 
      {{- end }}
      tolerations:
        - key: "example-key"
          operator: "Exists"
          effect: "NoSchedule"