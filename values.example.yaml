# Select a cloud provider. Must be one of "Azure" or "AWS"
cloudProvider: "Azure"

replicaCount: 1

image:
  repository: "crprivateaiprod.azurecr.io/deid"
  pullPolicy: "IfNotPresent"
  # Can be a direct version tag / container flavour (i.e. 3.3.2-cpu) OR a 'latest' tag (i.e. cpu, gpu)
  tag: "4.0.4-cpu"

# Change this to true if you have a cluster that has nodes with Nvidia GPUs available and would like to run the GPU container
gpuEnabled: false

imagePullSecrets:
  # Rename this to whatever you stored your CR Creds for the Private AI CR Kube secret to
  - name: "crprivateaiprod-creds"

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

service:
  type: "LoadBalancer"
  port: 80
  targetPort: 8080
  periodSeconds: 60
  initialDelaySeconds: 120
  timeoutSeconds: 10

license:
  name: "pai-license"
  volumeMount: "license-volume"
  mountPath: "/app/license"

envVars:
  # - name: "PAI_DISABLE_RAM_CHECK"
  #   value: "true"

# Configuration for the cert-manager subchart
certmanager:
  enabled: false
  namespace: "cert-manager"
  clusterResourceNamespace: "private-ai"
  crds:
    enabled: true
  webhook:
    # Required for AWS VPC-CNI pluggin
    hostNetwork: true
    securePort: 10255

# Configuration for the ingress-nginx subchart
ingressnginx:
  enabled: false
  # Azure load balancer settings
  controller:
    service:
      annotations:
        service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: "/healthz"
      externalTrafficPolicy: "Local"

# Specifies whether to deploy the kubernetes ingress
# Requires ingress-nginx and cert-manager to be installed
ingress:
  enabled: false

# Replace this with the domain name for the ingress
host: "ingress.domain.com"
sslSecret: "private-ai-tls"
